{"version":3,"sources":["webpack:///./src/stylesheets/main.styl?0c9b","stylesheets/main.styl","actions/index.js","components/Criterion.jsx","containers/SortByCriterion.js","actions/types.js","components/SortingCriteria.jsx","components/TvshowItem.jsx","components/Pagination.jsx","components/Search.jsx","components/Loading.jsx","components/Error.jsx","containers/TvshowTable.js","App.js","serviceWorker.js","reducers/tvshowReducer.js","reducers/index.js","index.js"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","container","sorting-criteria","sortingCriteria","active","search-input","searchInput","search-input-item","searchInputItem","search-highlighting","searchHighlighting","mainTable","page-numbers","pageNumbers","CriterionToSort","Criterion","_ref","children","onClick","react_default","a","createElement","getSortedTable","criterion","Error","connect","state","ownProps","tvshows","dispatch","type","payload","bind","SortingCriteria","className","style","SortByCriterion","TvshowItem","tvshow","search","imgSrc","poster_path","searchEscaped","replace","getResultWithSearch","searchedArea","arr","split","RegExp","symbolsParsed","result","length","key","substr","id","name","origin_country","original_language","overview","src","alt","vote_average","vote_count","Pagination","number","Search","onChange","Loading","error","TvshowTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","currentPage","showsPerPage","handleClick","assertThisInitialized","page","setState","Number","event","target","value","axios","get","then","response","console","log","data","results","catch","finally","_this2","_this$state","allShows","filter","toLowerCase","indexOf","indexOfLastShow","indexOfFirstShow","currentShows","slice","tvshowItems","map","index","components_TvshowItem","Math","ceil","renderPageNumbers","components_Pagination","isLoading","components_Loading","components_Error","components_SortingCriteria","components_Search","handleChange","Component","App","containers_TvshowTable","Boolean","window","location","hostname","match","initialState","combineReducers","arguments","action","concat","toConsumableArray","newState","sort","b","store","createStore","rootReducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2bc155b6.chunk.js","sourcesContent":["\nvar content = require(\"!!../../node_modules/css-loader/index.js?modules&camelCase&localIdentName=[path]__[name]__[local]--[hash:base64:5]!../../node_modules/stylus-loader/index.js!./main.styl\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js?modules&camelCase&localIdentName=[path]__[name]__[local]--[hash:base64:5]!../../node_modules/stylus-loader/index.js!./main.styl\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js?modules&camelCase&localIdentName=[path]__[name]__[local]--[hash:base64:5]!../../node_modules/stylus-loader/index.js!./main.styl\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  font-family: sans-serif;\\n  background-image: linear-gradient(to bottom, #d2b48c, #ffefd5 100%);\\n  background-attachment: fixed;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  padding: 0;\\n  margin: 0;\\n  font-size: 14px;\\n}\\n.src-stylesheets-__main__container--3K7u1 {\\n  max-width: 95%;\\n  margin: 0 auto;\\n  min-height: 100%;\\n}\\n.src-stylesheets-__main__options--2TuI1 {\\n  width: 100%;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n.src-stylesheets-__main__sorting-criteria--2qH4E {\\n  cursor: pointer;\\n  float: left;\\n  display: inline-block;\\n  padding-left: 30px;\\n}\\n.src-stylesheets-__main__sorting-criteria--2qH4E span {\\n  padding: 0 16px;\\n}\\n.src-stylesheets-__main__sorting-criteria--2qH4E .src-stylesheets-__main__active--G60g4 {\\n  background-color: #d2b48c;\\n}\\n.src-stylesheets-__main__sorting-criteria--2qH4E > * {\\n  line-height: 2em;\\n}\\nform {\\n  margin: 40px;\\n}\\n.src-stylesheets-__main__search-input--20Q0t {\\n  float: right;\\n  padding-right: 30px;\\n}\\n.src-stylesheets-__main__search-input--20Q0t > label {\\n  line-height: 2em;\\n}\\n.src-stylesheets-__main__search-input-item--2_xhr {\\n  padding: 0 16px;\\n}\\n.src-stylesheets-__main__search-highlighting--2WdyX {\\n  background-color: #b08245;\\n}\\ntable {\\n  width: 90%;\\n  border-collapse: collapse;\\n  border: 3px solid #808080;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\ntd,\\nth {\\n  border: 1px solid #808080;\\n  padding: 10px 15px;\\n}\\n.src-stylesheets-__main__mainTable--3U3rF {\\n  padding-bottom: 70px;\\n}\\nheader h2 {\\n  text-align: center;\\n  padding-top: 25px;\\n}\\n#src-stylesheets-__main__page-numbers--16nXX {\\n  cursor: pointer;\\n  float: right;\\n  display: inline-block;\\n  padding: 25px;\\n}\\n#src-stylesheets-__main__page-numbers--16nXX span {\\n  padding: 8px 16px;\\n}\\n#src-stylesheets-__main__page-numbers--16nXX .src-stylesheets-__main__active--G60g4 {\\n  background-color: #d2b48c;\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"container\": \"src-stylesheets-__main__container--3K7u1\",\n\t\"options\": \"src-stylesheets-__main__options--2TuI1\",\n\t\"sorting-criteria\": \"src-stylesheets-__main__sorting-criteria--2qH4E\",\n\t\"sortingCriteria\": \"src-stylesheets-__main__sorting-criteria--2qH4E\",\n\t\"active\": \"src-stylesheets-__main__active--G60g4\",\n\t\"search-input\": \"src-stylesheets-__main__search-input--20Q0t\",\n\t\"searchInput\": \"src-stylesheets-__main__search-input--20Q0t\",\n\t\"search-input-item\": \"src-stylesheets-__main__search-input-item--2_xhr\",\n\t\"searchInputItem\": \"src-stylesheets-__main__search-input-item--2_xhr\",\n\t\"search-highlighting\": \"src-stylesheets-__main__search-highlighting--2WdyX\",\n\t\"searchHighlighting\": \"src-stylesheets-__main__search-highlighting--2WdyX\",\n\t\"mainTable\": \"src-stylesheets-__main__mainTable--3U3rF\",\n\t\"page-numbers\": \"src-stylesheets-__main__page-numbers--16nXX\",\n\t\"pageNumbers\": \"src-stylesheets-__main__page-numbers--16nXX\"\n};","import { FETCH_TVSHOWS, SET_SORTING_CRITERION, FETCH_FAILURE, LOADING_STATE } from './types';\nimport axios from 'axios';\n\nconst apiURL = \"https://api.themoviedb.org/3/tv/popular?api_key=eaa4854fc14c0423809d014974235e94&language=en-US&page=1\";\nconst errorMsg = \"An error has occurred while sending the request!\";\n\nexport const CriterionToSort = {\n    SORT_BY_NUMBER: 'SORT_BY_NUMBER',\n    SORT_BY_NAME: 'SORT_BY_NAME',\n    SORT_BY_RATE: 'SORT_BY_RATE',\n    SORT_BY_DATE: 'SORT_BY_DATE'\n}\n\nexport const setSortingCriterion = () => (dispatch, criterion) => {\n    return dispatch({\n        type: SET_SORTING_CRITERION,\n        payload: criterion\n    })\n}\n\nexport const fetchTvshows = () => dispatch => {\n\n    axios.get(apiURL)\n        .then( response => {\n            console.log(response.data.results);\n            return dispatch({\n                type: FETCH_TVSHOWS,\n                payload: response.data.results\n            })\n\n        })\n        .catch( error => {\n            dispatch({\n                type: FETCH_FAILURE,\n                payload: errorMsg\n            })\n        })\n        .finally(() => {\n            dispatch({\n                type: LOADING_STATE,\n                payload: false,\n            })\n        });\n\n}\n\n\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Criterion = ({ children, onClick }) => (\n    <span\n        onClick={onClick}\n    >\n        {children}\n    </span>\n)\n\nCriterion.propTypes = {\n    children: PropTypes.node.isRequired,\n    onClick: PropTypes.func.isRequired\n}\n\nexport default Criterion","import { connect } from 'react-redux';\nimport { setSortingCriterion, CriterionToSort } from '../actions';\nimport Criterion from '../components/Criterion';\n\nconst getSortedTable = (criterion) => {\n    switch (criterion) {\n        case CriterionToSort.SORT_BY_NUMBER:\n            return 'id'\n        case CriterionToSort.SORT_BY_NAME:\n            return 'name'\n        case CriterionToSort.SORT_BY_RATE:\n            return 'vote_average'\n        case CriterionToSort.SORT_BY_DATE:\n            return 'first_air_date'\n        default:\n            throw new Error('Choose criterion to sort')\n    }\n}\nconst mapStateToProps = (state, ownProps) => ({\n    tvshows: state.tvshows\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onClick: setSortingCriterion().bind(null, dispatch, getSortedTable(ownProps.criterion))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Criterion)\n\n","export const FETCH_TVSHOWS = 'FETCH_TVSHOWS';\nexport const SET_SORTING_CRITERION = 'SET_SORTING_CRITERION';\nexport const FETCH_FAILURE = 'FETCH_FAILURE';\nexport const LOADING_STATE = 'LOADING_STATE';\n","import React from 'react';\nimport { CriterionToSort } from '../actions';\nimport SortByCriterion from '../containers/SortByCriterion';\nimport style from '../stylesheets/main.styl';\n\nconst SortingCriteria = () => {\n\n        return(\n            <span className={style.sortingCriteria}>\n                <strong>Sort by:</strong>\n                <SortByCriterion criterion={CriterionToSort.SORT_BY_NUMBER}>Number</SortByCriterion>\n                <SortByCriterion criterion={CriterionToSort.SORT_BY_NAME}>Title</SortByCriterion>\n                <SortByCriterion criterion={CriterionToSort.SORT_BY_RATE}>Rate</SortByCriterion>\n                <SortByCriterion criterion={CriterionToSort.SORT_BY_DATE}>First Air Date</SortByCriterion>\n            </span>\n        )\n}\n\nexport default SortingCriteria;\n","import React from 'react';\nimport style from '../stylesheets/main.styl';\nimport PropTypes from \"prop-types\";\n\nconst TvshowItem = ({ tvshow, search }) => {\n\n    const imgSrc = 'https://image.tmdb.org/t/p/w200' + tvshow.poster_path;\n    const searchEscaped = search.replace(/[\\\\[.+*?(){|^$]/g, \"\\\\$&\");\n\n    const getResultWithSearch = searchedArea => {\n\n        const arr = searchedArea.split(new RegExp(searchEscaped, \"i\"));\n        let symbolsParsed = 0;\n        let result = [];\n        for(let i = 0; i < arr.length; i++) {\n            result.push(arr[i]);\n            result.push((<span key={i} className={style.searchHighlighting}>{searchedArea.substr(arr[i].length + symbolsParsed, search.length)}</span>));\n            symbolsParsed += (arr[i].length + search.length);\n        }\n        return result;\n\n    }\n\n    return (\n\n        <tr>\n\n            <th> № {tvshow.id} </th>\n\n            <th>\n                <h2> {getResultWithSearch(tvshow.name)} </h2>\n                <h3> Country: {tvshow.origin_country} </h3>\n                <h3> Original Language: {tvshow.original_language} </h3>\n                <p> {getResultWithSearch(tvshow.overview)} </p>\n            </th>\n\n            <th> <img src={imgSrc} alt={tvshow.name}/> </th>\n\n            <th>\n                Rate: {tvshow.vote_average}/10\n                <p> Voted {tvshow.vote_count} times</p>\n            </th>\n\n        </tr>\n    );\n}\n\nTvshowItem.propTypes = {\n    tvshow: PropTypes.object.isRequired\n}\n\nexport default TvshowItem;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({ onClick, className, number }) => {\n\n        return(\n            <span\n                onClick={onClick.bind(this, number)}\n                className={className}\n            >\n                {number}\n            </span>\n        )\n}\n\nPagination.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    className: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired\n}\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport style from '../stylesheets/main.styl';\n\nconst Search = ({ onChange }) => {\n\n        return(\n            <span className={style.searchInput}>\n                <label className={style.searchInputItem}><strong>Search:</strong></label>\n                <input type=\"search\" onChange={onChange}/>\n            </span>\n        )\n}\n\nSearch.propTypes = {\n    onChange: PropTypes.func.isRequired\n}\n\nexport default Search;\n","import React from 'react';\n\nconst Loading = () => (\n    <div>\n        <strong>Loading...</strong>\n    </div>\n)\n\nexport default Loading","import React from 'react';\n\nconst Error = ({ error }) => (\n    <div>\n        <strong>{error}</strong>\n    </div>\n)\n\nexport default Error","import React, { Component } from 'react';\nimport connect from \"react-redux/es/connect/connect\";\nimport { fetchTvshows } from '../actions';\nimport SortingCriteria from '../components/SortingCriteria';\nimport TvshowItem from '../components/TvshowItem';\nimport Pagination from '../components/Pagination';\nimport Search from '../components/Search';\nimport Loading from '../components/Loading';\nimport Error from '../components/Error';\nimport style from '../stylesheets/main.styl';\n\nclass TvshowTable extends Component {\n\n    constructor(props) {\n\n        super(props)\n        this.state = {\n            currentPage: 1,\n            showsPerPage: 6,\n            search: \"\",\n            pageNumbers: [],\n        }\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(page) {\n        this.setState({\n            currentPage: Number(page)\n        })\n    }\n\n    handleChange(event) {\n        this.setState({\n            search: event.target.value\n        })\n\n    }\n\n    componentWillMount() {\n        fetchTvshows()(this.props.dispatch);\n    }\n\n    render() {\n\n        const { currentPage, showsPerPage, search } = this.state;\n\n        //filters tv-shows according to search value\n        const allShows = !this.state.search ? this.props.tvshows : this.props.tvshows.filter(tvshow => !this.state.search ||\n            tvshow.name.toLowerCase().indexOf(this.state.search.toLowerCase()) > -1 ||\n            tvshow.overview.toLowerCase().indexOf(this.state.search.toLowerCase()) > -1\n        );\n\n        //defines the list of tv-shows to render on the current page\n        const indexOfLastShow = currentPage * showsPerPage;\n        const indexOfFirstShow = indexOfLastShow - showsPerPage;\n        const currentShows = allShows.slice(indexOfFirstShow, indexOfLastShow);\n\n        //renders the whole list of tv-shows\n        const tvshowItems = this.props.tvshows && currentShows\n            .map(\n            (tvshow, index) => <TvshowItem key={tvshow.id} tvshow={tvshow} search={search}/>\n        );\n\n        //counts the number of pages\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(allShows.length / showsPerPage); i++) {\n            pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            return (\n                <Pagination\n                    key={number}\n                    id={number}\n                    number={number}\n                    onClick={this.handleClick}\n                    className={number === this.state.currentPage ? style.active : \"\"}\n                />)})\n\n        return (\n            <div className={style.mainTable}>\n\n                {this.props.isLoading ? <Loading /> : this.props.error ? <Error error={this.props.error} /> :\n\n                    <div>\n\n                        <div className={style.options}>\n                            <SortingCriteria />\n                            <Search onChange={this.handleChange.bind(this)}/>\n                        </div>\n\n                        <table>\n                            <tbody>\n\n                            {tvshowItems}\n\n                            </tbody>\n                        </table>\n\n                        <div id={style.pageNumbers}>\n                            {renderPageNumbers}\n                        </div>\n\n                    </div>\n\n                }\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    tvshows: state.tvshows,\n    isLoading: state.isLoading,\n    error: state.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n    dispatch,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TvshowTable, Pagination)\n\n","import React, { Component } from 'react';\nimport TvshowTable from './containers/TvshowTable'\nimport style from './stylesheets/main.styl';\n\nclass App extends Component {\n\n  render() {\n\n    return (\n        <div className={style.container}>\n            <header>\n                <h2>Most recommended TV shows</h2>\n            </header>\n\n            <TvshowTable />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport const initialState = {\n    tvshows: [],\n    error: \"\",\n    isLoading: true,\n};\nexport const tvshowReducer = (state = initialState.tvshows, action) => {\n    switch (action.type) {\n\n        case 'FETCH_TVSHOWS':\n            return [\n                ...state,\n                ...action.payload\n            ];\n\n        case 'SET_SORTING_CRITERION':\n            //console.log('in reducer to sort, action.payload = ', action.payload);\n            const newState = state.slice(0);\n            if(action.payload === 'name') {\n                newState.sort((a,b) => {\n                    return a[action.payload] < b[action.payload] ? -1 : 1;\n                });\n            } else if(action.payload === 'vote_average') {\n                newState.sort((a,b) => {\n                    return b[action.payload] - a[action.payload];\n                });\n            } else if(action.payload === 'first_air_date') {\n                newState.sort((a,b) => {\n                    return b[action.payload].replace(/-/g, '') - a[action.payload].replace(/-/g, '');\n                });\n            } else {\n                newState.sort((a,b) => {\n                    return a[action.payload] - b[action.payload];\n                });\n            }\n            return newState;\n        default:\n            return state\n    }\n\n}\n\nexport const isLoading = (state = initialState.isLoading, action) => {\n    switch (action.type){\n        case 'LOADING_STATE':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport const fetchFailure = (state = initialState.error, action) => {\n    switch (action.type){\n        case 'FETCH_FAILURE':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n// export default tvshowReducer\n\n\n\n\n","import { combineReducers } from 'redux';\nimport {isLoading, tvshowReducer, fetchFailure} from './tvshowReducer';\n\nexport default combineReducers({\n    tvshows: tvshowReducer,\n    error: fetchFailure,\n    isLoading,\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducers';\nimport { initialState } from './reducers/tvshowReducer';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux';\n\nconst store = createStore(rootReducer, initialState);\n\nReactDOM.render(<Provider store={store}>\n                    <App />\n                </Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}